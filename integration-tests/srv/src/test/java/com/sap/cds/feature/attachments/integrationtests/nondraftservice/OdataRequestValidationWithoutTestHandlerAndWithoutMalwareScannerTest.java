/*
 * Â© 2024 SAP SE or an SAP affiliate company. All rights reserved.
 */
package com.sap.cds.feature.attachments.integrationtests.nondraftservice;

import static org.assertj.core.api.Assertions.assertThat;

import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.concurrent.TimeUnit;

import org.awaitility.Awaitility;
import org.junit.jupiter.api.Test;
import org.springframework.test.context.ActiveProfiles;

import com.sap.cds.feature.attachments.generated.integration.test.cds4j.sap.attachments.Attachments;
import com.sap.cds.feature.attachments.generated.integration.test.cds4j.testservice.AttachmentEntity;
import com.sap.cds.feature.attachments.integrationtests.constants.Profiles;

@ActiveProfiles(Profiles.TEST_HANDLER_DISABLED)
class OdataRequestValidationWithoutTestHandlerAndWithoutMalwareScannerTest extends OdataRequestValidationBase {

	@Test
	void serviceHandlerIsNull() {
		assertThat(serviceHandler).isNull();
	}

	@Override
	protected void executeContentRequestAndValidateContent(String url, String content) throws Exception {
		Awaitility.await().atMost(10, TimeUnit.SECONDS).until(() -> {
			var response = requestHelper.executeGet(url);
			return response.getResponse().getContentAsString().equals(content);
		});

		var response = requestHelper.executeGet(url);
		assertThat(response.getResponse().getContentAsString()).isEqualTo(content);
	}

	@Override
	protected void verifyTwoDeleteEvents(AttachmentEntity itemAttachmentEntityAfterChange,
			Attachments itemAttachmentAfterChange) {
		// no service handler - nothing to do
	}

	@Override
	protected void verifyNumberOfEvents(String event, int number) {
		// no service handler - nothing to do
	}

	@Override
	protected void verifyContentId(Attachments attachmentWithExpectedContent, String attachmentId, String contentId) {
		assertThat(attachmentWithExpectedContent.getContentId()).isEqualTo(attachmentId);
	}

	@Override
	protected void verifyContentAndContentId(Attachments attachment, String testContent,
			Attachments itemAttachment) throws IOException {
		assertThat(attachment.getContent().readAllBytes()).isEqualTo(testContent.getBytes(StandardCharsets.UTF_8));
		assertThat(attachment.getContentId()).isEqualTo(itemAttachment.getId());
	}

	@Override
	protected void verifyContentAndContentIdForAttachmentEntity(AttachmentEntity attachment, String testContent,
			AttachmentEntity itemAttachment) throws IOException {
		assertThat(attachment.getContent().readAllBytes()).isEqualTo(testContent.getBytes(StandardCharsets.UTF_8));
		assertThat(attachment.getContentId()).isEqualTo(itemAttachment.getId());
	}

	@Override
	protected void clearServiceHandlerContext() {
		//no service handler - nothing to do
	}

	@Override
	protected void clearServiceHandlerDocuments() {
		//no service handler - nothing to do
	}

	@Override
	protected void verifySingleCreateEvent(String contentId, String content) {
		//no service handler - nothing to do
	}

	@Override
	protected void verifySingleCreateAndUpdateEvent(String resultContentId, String toBeDeletedContentId,	String content) {
		//no service handler - nothing to do
	}

	@Override
	protected void verifySingleDeletionEvent(String contentId) {
		//no service handler - nothing to do
	}

	@Override
	protected void verifySingleReadEvent(String contentId) {
		//no service handler - nothing to do
	}

	@Override
	protected void verifyNoAttachmentEventsCalled() {
		//no service handler - nothing to do
	}

	@Override
	protected void verifyEventContextEmptyForEvent(String... events) {
		//no service handler - nothing to do
	}

}
