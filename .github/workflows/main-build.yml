name: Java Build with Maven

env:
  JAVA_VERSION: '17'
  MAVEN_VERSION: '3.6.3'

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    name: Build with Maven
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 17, 21 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        uses: ./.github/actions/build
        with:
          java-version: ${{ matrix.java-version }}
          maven-version: ${{ env.MAVEN_VERSION }}

  scan:
    name: Blackduck Scan
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Scan
        uses: ./.github/actions/scan-with-blackduck
        with:
          blackduck_token: ${{ secrets.BLACK_DUCK_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          maven-version: ${{ env.MAVEN_VERSION }}

  deploy-snapshot:
    name: Deploy snapshot to Artifactory
    runs-on: ubuntu-latest
    needs: [build, scan]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: sapmachine
          cache: maven
          server-id: artifactory
          server-username: DEPLOYMENT_USER
          server-password: DEPLOYMENT_PASS

      - name: Set up Maven ${{ env.MAVEN_VERSION }}
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: ${{ env.MAVEN_VERSION }}

      - name: Get Revision
        id: get-revision
        run: |
          echo "REVISION=$(mvn help:evaluate -Dexpression=revision -q -DforceStdout)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Print Revision
        run: echo "Current revision ${{ steps.get-revision.outputs.REVISION }}"
        shell: bash
  
      - name: Deploy snapshot
        if: ${{ endsWith(steps.get-revision.outputs.REVISION, '-SNAPSHOT') }}
        # https://maven.apache.org/plugins/maven-deploy-plugin/usage.html#the-deploy-deploy-mojo
        run: >
          mvn -B -ntp -fae
          -pl !integration-tests,!integration-tests/db,!integration-tests/srv
          -Dmaven.install.skip=true
          -Dmaven.test.skip=true
          -DdeployAtEnd=true
          deploy
        env:
          DEPLOYMENT_USER: ${{ secrets.DEPLOYMENT_USER }}
          DEPLOYMENT_PASS: ${{ secrets.DEPLOYMENT_PASS }}
        shell: bash
