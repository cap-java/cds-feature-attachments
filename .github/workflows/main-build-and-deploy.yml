name: Java CI with Maven

env:
  JAVA_VERSION: '17'
  DEPLOY_REPOSITORY_URL: 'https://common.repositories.cloud.sap/artifactory/cap-java'
  POM_FILE: '.flattened-pom.xml'

on:
  release:
    branches: [ "main" ]
    types: [ "prereleased" ]

jobs:

  blackduck:
    name: "Blackduck Scan"
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Scan With Black Duck"
        uses: ./.github/actions/scan-with-blackduck
        with:
          blackduck_token: ${{ secrets.BLACK_DUCK_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

  update-version:
    runs-on: ubuntu-latest
    needs: blackduck
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Update version
        uses: ./.github/actions/newrelease
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: Upload Changed Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: root-new-version
          include-hidden-files: true
          path: .
          retention-days: 1

  build:
    runs-on: ubuntu-latest
    needs: update-version
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: root-new-version

      - name: Build with Maven
        uses: ./.github/actions/build
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: Upload Changed Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: root-build
          include-hidden-files: true
          path: .
          retention-days: 1

  deploy:
    name: Deploy to Artifactory
    runs-on: ubuntu-latest
    needs: build
    steps:
      - run: echo "Start the deploy to Artifactory"
        name: deploy start

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: root-build

      - name: Deploy with Maven
        uses: ./.github/actions/deploy
        with:
          user: ${{ secrets.DEPLOYMENT_USER }}
          password: ${{ secrets.DEPLOYMENT_PASS }}
          repository-url: ${{ env.DEPLOY_REPOSITORY_ID }}
          pom-file: ${{ env.POM_FILE }}

      - name: Echo Status
        run: echo "The job status is ${{ job.status }}"
